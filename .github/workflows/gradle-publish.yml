# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify

      - name: Create maven settings
        shell: bash
        run: |
          cat <<EOF > mvn_settings.xml
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                http://maven.apache.org/xsd/settings-1.0.0.xsd">

            <activeProfiles>
              <activeProfile>github</activeProfile>
            </activeProfiles>

            <profiles>
              <profile>
                <id>github</id>
                <repositories>
                  <repository>
                    <id>central</id>
                    <url>https://repo1.maven.org/maven2</url>
                  </repository>
                </repositories>
              </profile>
            </profiles>

            <servers>
              <server>
                <id>github</id>
                <username>dummy</username>
                <password>\${GITHUB_TOKEN}</password>
              </server>
            </servers>

          </settings>

          EOF

      - name: Publish to GitHub Packages
        run: mvn --batch-mode deploy -s mvn_settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
